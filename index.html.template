<?php

# Define the settings
$settings = array (
	'hostname' => 'localhost',
	'username' => 'the_username',
	'password' => 'the_password',
	'website' => 'https://publications.example.com/',
	'apiHttp' => 'http://publications.example.com:8080/publications-api',
	'apiHttps' => 'https://publications.example.com:8081/elements-api/v4.6',
	'multisite' => false,
	'getUsersFunction' => 'getUsersUpstream',
	'getGroupsFunction' => 'getGroupsUpstream',
	'getGroupMembers' => 'getGroupMembersUpstream',
);

# Run the application with the specified settings
require_once ('publicationsDatabase.php');
new publicationsDatabase ($settings);


# Define the users callback function
function getUsersUpstream ()
{
	/*	
		Must return a datastructure like this:
		
		Array
		(
		    [spqr1] => Array (
		            [id] => spqr1
		            [name] => Sam Right
		        ),
		    [xyz123] => Array (
		            [id] => xyz123
		            [name] => Xavier Yu
		        ),
			...
		);
		
		or in multisite mode:
		
		Array
		(
			// Department of Widgets
			'widgets' => Array
			(
			    [spqr1] => Array (
			            [id] => spqr1
			            [name] => Sam Right
			        ),
			    [xyz123] => Array (
			            [id] => xyz123
			            [name] => Xavier Yu
			        ),
				...
			),
			
			// Department of Sprockets
			'sprockets' => Array
			(
			    [spqr2] => Array (
			            [id] => spqr2
			            [name] => Sam Render
			        ),
			    [abc456] => Array (
			            [id] => abc456
			            [name] => Antonia Coneley
			        ),
			    [xyz123] => Array (
			            [id] => xyz123
			            [name] => Xavier Yu
			        ),
				...
			),
			
			...
	*/
}


# Define the groups callback function
function getGroupsUpstream ()
{
	/*	
		Must return a datastructure like this:
		
		Array
		(
		    [widgets] => Array (
		            [id] => widgets
		            [name] => Widgets research group
		            [url] => http://www.example.com/research/widgets/
		            [ordering] => 1
		        ),
		    [sprockets] => Array (
		            [id] => sprockets
		            [name] => Sprockets research group
		            [url] => http://www.example.com/research/sprockets/
		            [ordering] => 1
		        ),
			...
		);
		
		or in multisite mode, nested by organisation as in getUsersUpstream
	*/
}


# Define the members callback function
function getGroupMembersUpstream ($groupUrl)
{
	/*	
		Must return a datastructure like this:
		
		Array
		(
		    [spqr1] => Array (
		            [id] => spqr1
		            [name] => Sam Right
		        ),
		    [xyz123] => Array (
		            [id] => abc123
		            [name] => Xavier Yu
		        ),
			...
		);
	*/
}

?>